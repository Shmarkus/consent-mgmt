plugins {
    id 'org.liquibase.gradle' version '2.0.2'
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id "org.openapi.generator" version "4.3.0"
    id 'com.google.cloud.tools.jib' version '2.1.0'
}

apply from: "gradle/api.gradle"
apply from: "gradle/mapstruct.gradle"
apply from: "gradle/docker.gradle"

group = 'com.helmes.consent'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

test {
    useJUnitPlatform()
    exclude "**/*IT*", "**/*IntegrationTest*"
    testLogging {
        events 'FAILED', 'SKIPPED'
    }
}

task integrationTest(type: Test) {
    useJUnitPlatform()
    description = "Execute integration tests."
    group = "verification"
    include "**/*IT*", "**/*IntegrationTest*"
    testLogging {
        events 'FAILED', 'SKIPPED'
    }
}

check.dependsOn integrationTest

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    liquibaseRuntime.extendsFrom runtime
}

project.ext.diffChangelogFile = "src/main/resources/liquibase/changelog/" + new Date().format("yyyyMMddHHmmss") + "_changelog.xml"

liquibase {
    activities {
        main {
            url project.ext.mainUrl
            username project.ext.mainUsername
            password project.ext.mainPassword
            changeLogFile 'src/main/resources/liquibase/master.xml'
            defaultSchemaName ""
            logLevel "debug"
            classpath "src/main/resources/"
        }
        diffLog {
            url project.ext.mainUrl
            username project.ext.mainUsername
            password project.ext.mainPassword
            changeLogFile 'src/main/resources/liquibase/master.xml'
            difftypes 'data'
            changeLogFile project.ext.diffChangelogFile
            referenceUrl "hibernate:spring:com.helmes.consent.registry.domain?dialect=org.hibernate.dialect.PostgreSQL95Dialect&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy"
            defaultSchemaName ""
            classpath "$buildDir/classes/java/main"
        }
    }
    runList = project.ext.runList
}

if (!project.hasProperty("runList")) {
    project.ext.runList = "main"
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR3")
}

dependencies {
    // database
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.hibernate:hibernate-core:5.4.13.Final'
    implementation 'org.hibernate:hibernate-ehcache:5.4.13.Final'
    implementation "com.zaxxer:HikariCP"
    runtime 'org.postgresql:postgresql'
    // liquibase
    implementation 'org.liquibase:liquibase-core:3.8.1'
    liquibaseRuntime 'org.liquibase:liquibase-core:3.8.1'
    liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:3.6'
    liquibaseRuntime 'org.postgresql:postgresql:42.1.4'
    liquibaseRuntime sourceSets.main.output
    //application
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation "com.h2database:h2"
    testImplementation "org.assertj:assertj-core"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
